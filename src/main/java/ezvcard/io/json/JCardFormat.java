package ezvcard.io.json;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import ezvcard.VCard;

/**
 * Configuration for use with JCardSerializer. The intention is for this to be
 * used in combination with &#64;JsonSerialize on getters of type VCard, for
 * example:
 * 
 * <pre>
 * class Person {
 * 	private VCard contact;
 * 
 * 	&#064;JsonSerialize(using = JCardSerializer.class)
 * 	&#064;JCardOptions(addProdId = false, versionStrict = false)
 * 	public VCard getContact() {
 * 		return contact;
 * 	}
 * 
 * 	// ...
 * }
 * </pre>
 * 
 * @author buddy
 */
@Target({ ElementType.ANNOTATION_TYPE, ElementType.FIELD, ElementType.METHOD, ElementType.PARAMETER, ElementType.TYPE })
@Retention(RetentionPolicy.RUNTIME)
public @interface JCardFormat {
	/**
	 * Whether or not to add a "PRODID" property to each vCard, saying that the
	 * vCard was generated by this library.
	 */
	public boolean addProdId() default true;

	/**
	 * Whether properties that do not support the target version will be
	 * excluded from the written vCard.
	 */
	public boolean versionStrict() default true;
}
